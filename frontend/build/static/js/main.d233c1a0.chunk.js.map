{"version":3,"sources":["component/video.mp4","component/Welcome.js","lib/isAuth.js","component/Navbar.js","lib/PasswordInput.js","lib/EmailInput.js","lib/apiList.js","component/login-img.png","component/Login.js","component/Logout.js","lib/FileUploadInput.js","component/Signup.js","component/Home.js","component/Applications.js","component/Profile.js","component/recruiter/CreateJobs.js","component/recruiter/MyJobs.js","component/recruiter/JobApplications.js","component/recruiter/AcceptedApplicants.js","component/recruiter/Profile.js","lib/MessagePopup.js","App.js","index.js"],"names":["ErrorPage","props","Grid","container","item","direction","alignItems","justify","style","padding","minHeight","Typography","variant","Welcome","className","autoPlay","loop","muted","minWidth","maxWidth","maxHeight","objectFit","zIndex","boxSizing","backgroundColor","src","video","type","class","position","top","left","bottom","width","textAlign","transform","background","marginTop","fontSize","textTransform","fontWeight","color","letterSpacing","marginBottom","fontStyle","userType","localStorage","getItem","isAuth","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Navbar","classes","history","useHistory","handleClick","location","console","log","push","AppBar","Toolbar","Button","onClick","PasswordInput","useState","showPassword","setShowPassword","FormControl","error","InputLabel","htmlFor","label","OutlinedInput","id","endAdornment","InputAdornment","IconButton","onMouseDown","event","preventDefault","edge","value","onChange","labelWidth","onBlur","helperText","FormHelperText","EmailInput","inputErrorHandler","handleInputError","required","TextField","email","message","target","test","String","toLowerCase","server","apiList","login","signup","uploadResume","uploadProfileImage","jobs","applications","rating","user","applicants","body","inputBox","submitButton","Login","setPopup","useContext","SetPopupContext","loggedin","setLoggedin","password","loginDetails","setLoginDetails","setInputErrorHandler","handleInput","key","to","marginLeft","img","height","Paper","elevation","component","status","Object","keys","some","obj","open","severity","axios","post","then","response","setItem","data","token","catch","err","borderRadius","Logout","useEffect","removeItem","FileUploadInput","uploadTo","identifier","file","setFile","uploadPercentage","setUploadPercentage","xs","icon","display","files","name","InputProps","readOnly","FormData","append","Axios","headers","onUploadProgress","progressEvent","parseInt","Math","round","loaded","total","url","statusText","handleUpload","disabled","CloudUpload","LinearProgress","MultifieldInput","education","setEducation","map","paddingLeft","paddingRight","institutionName","newEdu","startYear","endYear","Signup","skills","resume","profile","bio","contactNumber","signupDetails","setSignupDetails","phone","setPhone","untouched","select","MenuItem","chips","multiline","rows","split","filter","n","length","country","tmpErrorHandler","forEach","toUpperCase","substr","updatedDetails","trim","handleLogin","verified","handleLoginRecruiter","button","jobTileOuter","margin","popupDialog","justifyContent","JobTile","job","setOpen","sop","setSop","handleClose","deadline","Date","toLocaleDateString","Rating","jobType","salary","duration","recruiter","skillsets","skill","Chip","Modal","onClose","outline","flexDirection","_id","Authorization","FilterPopup","searchOptions","setSearchOptions","getData","FormControlLabel","control","Checkbox","checked","fullTime","partTime","wfh","Slider","valueLabelDisplay","valueLabelFormat","marks","fullWidth","border","sort","for","desc","Home","setJobs","filterOpen","setFilterOpen","query","searchParams","asc","queryString","join","address","get","today","onKeyPress","ev","paddingTop","statusBlock","ApplicationTile","application","setRating","appliedOn","dateOfApplication","joinedOn","dateOfJoining","fetchRating","applied","shortlisted","accepted","rejected","deleted","cancelled","finished","newValue","put","jobId","Applications","setApplications","avatar","alignSelf","Profile","profileDetails","setProfileDetails","edu","float","Avatar","onAdd","chip","onDelete","index","splice","window","getResume","handleUpdate","CreateJobs","maxApplicants","maxPositions","getTime","toISOString","jobDetails","setJobDetails","inputProps","min","InputLabelProps","shrink","openUpdate","setOpenUpdate","handleCloseUpdate","postedOn","dateOfPosting","acceptedCandidates","delete","MyJobs","colorSet","updateStatus","statusData","buttonSet","jobApplicant","JobApplications","useParams","all","openEndJob","setOpenEndJob","handleCloseEndJob","applicantId","userId","AcceptedApplicants","MessagePopup","reason","Snackbar","autoHideDuration","Alert","createContext","App","popup","Provider","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d233c1a0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/video.332a6031.mp4\";","import { Grid, Typography } from \"@material-ui/core\";\nimport video from './video.mp4';\n\nconst Welcome = (props) => {\n  return (\n    <Grid container item direction=\"column\" alignItems=\"center\" justify=\"center\">\n      \n      <video className='videoTag' autoPlay loop muted \n        style={{minWidth: \"100%\",minHeight: \"100vh\",maxWidth: \"100%\",maxHeight: \"100vh\",objectFit: \"cover\",\n          zIndex: \"-1\", boxSizing:\"border-box\",backgroundColor: \"rgba(35,45,57,0.8)\"}}>\n          <source src={video} type='video/mp4' />\n      </video>\n        <div class=\"caption header-text\"\n          style={{ position: \"absolute\",top: \"0\",left: \"0\", bottom: \"7px\",width: \"100%\"\n            }}>\n\n              <div style={{textAlign: \"center\",position: \"absolute\",width: \"60%\",left: \"50%\",top: \"50%\",\n                            transform: \"translate(-50%,-50%)\",background:\"rgba(255,255,255,0.5)\"}}>\n                <Grid item >\n                  <Typography variant=\"h6\" style={{marginTop: \"0px\",fontSize: \"18px\",\n                      textTransform: \"uppercase\",fontWeight: \"800\",color: \"#3f51b5\",\n                      letterSpacing: \"0.5px\"}}>FACING DIFFICULTIES IN FINDING SUITABLE JOB </Typography>\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"h2\" \n                  style={{marginTop: \"30px\",marginBottom:\"25px\",textTransform: \"uppercase\",\n                  fontWeight: \"800\",color: \"#3f51b5\",letterSpacing: \"1px\"}}>\n                    FIND THE PERFECT <em style={{fontStyle: \"normal\",color: \"#ed563b\",fontWeight: \"900\"}}>JOB</em>\n                  </Typography>\n                </Grid>\n              </div>\n              \n        </div>\n    \n    </Grid>\n  );\n};\n\nexport const ErrorPage = (props) => {\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n        <Typography variant=\"h2\">Error 404</Typography>\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Welcome;\n","const isAuth = () => {\n  return localStorage.getItem(\"token\");\n};\n\nexport const userType = () => {\n  return localStorage.getItem(\"type\");\n};\n\nexport default isAuth;\n","import {\n  AppBar,Toolbar,Typography,Button,makeStyles,} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\n\nimport isAuth, { userType } from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Navbar = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n\n  const handleClick = (location) => {\n    console.log(location);\n    history.push(location);\n  };\n\n\n  return (\n    <AppBar position=\"fixed\" background= \"transparent\">\n      <Toolbar style={{minHeight: \"80px\"}}>\n        <Typography variant=\"h6\" className={classes.title} style={{fontSize: \"32px\",fontWeight: \"800\"}}>\n        {/* <img src=\"https://www.linkpicture.com/q/job-search.png\" width=\"30px\" height=\"auto\"></img> */}\n        JOB O HUNT \n        </Typography>\n        <div style={{marginTop:\"20px\"}}>\n        {isAuth() ? (\n          userType() === \"recruiter\" ? (\n            <>\n              \n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\n              <Typography style={{fontSize:\"18px\"}}>Home</Typography>\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/addjob\")}>\n              <Typography style={{fontSize:\"18px\"}}>Add Jobs</Typography>\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/myjobs\")}>\n              <Typography style={{fontSize:\"18px\"}}>Posted</Typography>\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/employees\")}>\n              <Typography style={{fontSize:\"18px\"}}>Employees</Typography>\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\n              <Typography style={{fontSize:\"18px\"}}>Profile</Typography>\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\n              <Typography style={{fontSize:\"18px\"}}>Logout</Typography>\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/home\")}>\n              <Typography style={{fontSize:\"18px\"}}>Home</Typography>\n              </Button>\n              <Button\n                color=\"inherit\"\n                onClick={() => handleClick(\"/applications\")}\n              >\n                <Typography style={{fontSize:\"18px\"}}>Applied</Typography>\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/profile\")}>\n              <Typography style={{fontSize:\"18px\"}}>Profile</Typography>\n              </Button>\n              <Button color=\"inherit\" onClick={() => handleClick(\"/logout\")}>\n              <Typography style={{fontSize:\"18px\"}}>Logout</Typography>\n              </Button>\n            </>\n          )\n        ) : (\n          <>\n            <Button color=\"inherit\" onClick={() => handleClick(\"/login\")}>\n              <Typography style={{fontSize:\"18px\"}}>Login</Typography>\n            </Button>\n            <Button color=\"inherit\" onClick={() => handleClick(\"/signup\")}>\n            <Typography style={{fontSize:\"18px\"}}>SignUp</Typography>\n            </Button>\n          </>\n        )}\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import { useState } from \"react\";\nimport {\n  FormControl,InputLabel,OutlinedInput,InputAdornment,IconButton,FormHelperText,\n} from \"@material-ui/core\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nconst PasswordInput = (props) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  return (\n    <>\n      <FormControl variant=\"outlined\" error={props.error ? props.error : null}>\n        <InputLabel htmlFor=\"outlined-adornment-password\">\n          {props.label}\n        </InputLabel>\n        <OutlinedInput\n          id=\"outlined-adornment-password\"\n          type={showPassword ? \"text\" : \"password\"}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton\n                onClick={handleShowPassword}\n                onMouseDown={handleMouseDownPassword}\n                edge=\"end\"\n              >\n                {showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n          value={props.value}\n          onChange={(event) => props.onChange(event)}\n          labelWidth={props.labelWidth ? props.labelWidth : 70}\n          className={props.className}\n          onBlur={props.onBlur ? props.onBlur : null}\n        />\n        {props.helperText ? (\n          <FormHelperText>{props.helperText}</FormHelperText>\n        ) : null}\n      </FormControl>\n    </>\n  );\n};\n\nexport default PasswordInput;\n","import { TextField } from \"@material-ui/core\";\n\nconst EmailInput = (props) => {\n  const {\n    label,\n    value,\n    onChange,\n    inputErrorHandler,\n    handleInputError,\n    required,\n    className,\n  } = props;\n\n  return (\n    <TextField\n      label={label}\n      variant=\"outlined\"\n      value={value}\n      onChange={onChange}\n      helperText={inputErrorHandler.email.message}\n      onBlur={(event) => {\n        if (event.target.value === \"\") {\n          if (required) {\n            handleInputError(\"email\", true, \"Email is required\");\n          } else {\n            handleInputError(\"email\", false, \"\");\n          }\n        } else {\n          const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n          if (re.test(String(event.target.value).toLowerCase())) {\n            handleInputError(\"email\", false, \"\");\n          } else {\n            handleInputError(\"email\", true, \"Incorrect email format\");\n          }\n        }\n      }}\n      error={inputErrorHandler.email.error}\n      className={className}\n    />\n  );\n};\n\nexport default EmailInput;\n","export const server = \"http://localhost:4444\";\n//export const server = \"https://secret-shelf-87665.herokuapp.com\";\n\nconst apiList = {\n  login: `${server}/auth/login`,\n  signup: `${server}/auth/signup`,\n  uploadResume: `${server}/upload/resume`,\n  uploadProfileImage: `${server}/upload/profile`,\n  jobs: `${server}/api/jobs`,\n  applications: `${server}/api/applications`,\n  rating: `${server}/api/rating`,\n  user: `${server}/api/user`,\n  applicants: `${server}/api/applicants`,\n};\n\nexport default apiList;\n","export default __webpack_public_path__ + \"static/media/login-img.5fa9f98d.png\";","import { useContext, useState } from \"react\";\nimport {\n  Grid,\n  TextField,\n  Button,\n  Typography,\n  makeStyles,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport \"../index.css\"\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nimport img from './login-img.png';\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"300px\",\n  },\n  submitButton: {\n    width: \"300px\",\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [loginDetails, setLoginDetails] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      error: false,\n      message: \"\",\n    },\n    password: {\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setLoginDetails({\n      ...loginDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const verified = !Object.keys(inputErrorHandler).some((obj) => {\n      return inputErrorHandler[obj].error;\n    });\n    if (verified) {\n      axios\n        .post(apiList.login, loginDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Grid container direction=\"row\" >\n      <div style={{alignItems:\"center\", marginLeft:\"15%\",marginTop:\"\"}}>\n        <img src={img}\n          width=\"400px\" height=\"450px\" ></img>\n      </div>\n    <Paper elevation={3} className={classes.body}>\n      \n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n      \n        <Grid item>\n          <Typography variant=\"h3\" component=\"h2\" style={{color:\"#3f51b5\",fontWeight:\"bold\"}}>\n            Welcome back, Login!\n          </Typography>\n        </Grid>\n\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={loginDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={loginDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n          />\n        </Grid>\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => handleLogin()}\n            className={classes.submitButton}\n            style={{borderRadius:\"8px\",width:\"130px\",height:\"50px\"}}\n          >\n            Login\n          </Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  </Grid>\n  );\n};\n\nexport default Login;\n","import { useEffect, useContext } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst Logout = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"type\");\n    setPopup({\n      open: true,\n      severity: \"success\",\n      message: \"Logged out successfully\",\n    });\n  }, []);\n  return <Redirect to=\"/login\" />;\n};\n\nexport default Logout;\n","import { useState, useContext } from \"react\";\nimport { Grid, Button, TextField, LinearProgress } from \"@material-ui/core\";\nimport { CloudUpload } from \"@material-ui/icons\";\nimport Axios from \"axios\";\n\nimport { SetPopupContext } from \"../App\";\n\nconst FileUploadInput = (props) => {\n  const setPopup = useContext(SetPopupContext);\n\n  const { uploadTo, identifier, handleInput } = props;\n\n  const [file, setFile] = useState(\"\");\n  const [uploadPercentage, setUploadPercentage] = useState(0);\n\n  const handleUpload = () => {\n    console.log(file);\n    const data = new FormData();\n    data.append(\"image\", file);\n    Axios.post(uploadTo, data, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n      },\n      onUploadProgress: (progressEvent) => {\n        setUploadPercentage(\n          parseInt(\n            Math.round((progressEvent.loaded * 100) / progressEvent.total)\n          )\n        );\n      },\n    })\n      .then((response) => {\n        console.log(response.data);\n        handleInput(identifier, response.data.url);\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n      })\n      .catch((err) => {\n        \n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.statusText,\n        });\n      });\n  };\n\n  return (\n    <Grid container item xs={12} direction=\"column\" className={props.className}>\n      <Grid container item xs={12} spacing={0}>\n        <Grid item xs={3}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            component=\"label\"\n            style={{ width: \"100%\", height: \"100%\" }}\n          >\n            {props.icon}\n            <input\n              type=\"file\"\n              style={{ display: \"none\" }}\n              onChange={(event) => {\n                console.log(event.target.files);\n                setUploadPercentage(0);\n                setFile(event.target.files[0]);\n              }}\n              // onChange={onChange}\n              // onChange={\n              //   (e) => {}\n              //   //   setSource({ ...source, place_img: e.target.files[0] })\n              // }\n            />\n          </Button>\n        </Grid>\n        <Grid item xs={6}>\n          <TextField\n            label={props.label}\n            value={file ? file.name || \"\" : \"\"}\n            InputProps={{\n              readOnly: true,\n            }}\n            variant=\"outlined\"\n            style={{ width: \"100%\" }}\n          />\n        </Grid>\n        <Grid item xs={3}>\n          <Button\n            variant=\"contained\"\n            color=\"secondary\"\n            style={{ width: \"100%\", height: \"100%\" }}\n            onClick={() => handleUpload()}\n            disabled={file ? false : true}\n          >\n            <CloudUpload />\n          </Button>\n        </Grid>\n      </Grid>\n      {uploadPercentage !== 0 ? (\n        <Grid item xs={12} style={{ marginTop: \"10px\" }}>\n          <LinearProgress variant=\"determinate\" value={uploadPercentage} />\n        </Grid>\n      ) : null}\n    </Grid>\n  );\n};\n\nexport default FileUploadInput;","import { useState, useContext } from \"react\";\nimport {Grid,TextField,Button,Typography,makeStyles,Paper,MenuItem,Input,} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { Redirect } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport PasswordInput from \"../lib/PasswordInput\";\nimport EmailInput from \"../lib/EmailInput\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport isAuth from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    padding: \"60px 60px\",\n  },\n  inputBox: {\n    width: \"400px\",\n  },\n  submitButton: {\n    width: \"400px\",\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid\n          item\n          container\n          className={classes.inputBox}\n          key={key}\n          style={{ paddingLeft: 0, paddingRight: 0 }}\n        >\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Signup = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [loggedin, setLoggedin] = useState(isAuth());\n\n  const [signupDetails, setSignupDetails] = useState({\n    type: \"applicant\",\n    email: \"\",\n    password: \"\",\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const [inputErrorHandler, setInputErrorHandler] = useState({\n    email: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    password: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n    name: {\n      untouched: true,\n      required: true,\n      error: false,\n      message: \"\",\n    },\n  });\n\n  const handleInput = (key, value) => {\n    setSignupDetails({\n      ...signupDetails,\n      [key]: value,\n    });\n  };\n\n  const handleInputError = (key, status, message) => {\n    setInputErrorHandler({\n      ...inputErrorHandler,\n      [key]: {\n        required: true,\n        untouched: false,\n        error: status,\n        message: message,\n      },\n    });\n  };\n\n  const handleLogin = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    console.log(education);\n\n    let updatedDetails = {\n      ...signupDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  const handleLoginRecruiter = () => {\n    const tmpErrorHandler = {};\n    Object.keys(inputErrorHandler).forEach((obj) => {\n      if (inputErrorHandler[obj].required && inputErrorHandler[obj].untouched) {\n        tmpErrorHandler[obj] = {\n          required: true,\n          untouched: false,\n          error: true,\n          message: `${obj[0].toUpperCase() + obj.substr(1)} is required`,\n        };\n      } else {\n        tmpErrorHandler[obj] = inputErrorHandler[obj];\n      }\n    });\n\n    let updatedDetails = {\n      ...signupDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...signupDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    setSignupDetails(updatedDetails);\n\n    const verified = !Object.keys(tmpErrorHandler).some((obj) => {\n      return tmpErrorHandler[obj].error;\n    });\n\n    console.log(updatedDetails);\n\n    if (verified) {\n      axios\n        .post(apiList.signup, updatedDetails)\n        .then((response) => {\n          localStorage.setItem(\"token\", response.data.token);\n          localStorage.setItem(\"type\", response.data.type);\n          setLoggedin(isAuth());\n          setPopup({\n            open: true,\n            severity: \"success\",\n            message: \"Logged in successfully\",\n          });\n          console.log(response);\n        })\n        .catch((err) => {\n          setPopup({\n            open: true,\n            severity: \"error\",\n            message: err.response.data.message,\n          });\n          console.log(err.response);\n        });\n    } else {\n      setInputErrorHandler(tmpErrorHandler);\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"Incorrect Input\",\n      });\n    }\n  };\n\n  return loggedin ? (\n    <Redirect to=\"/\" />\n  ) : (\n    <Paper elevation={3} className={classes.body}>\n      <Grid container direction=\"column\" spacing={4} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h3\" component=\"h2\" style={{color:\"#3f51b5\",fontWeight:\"bold\"}}>\n            Sign up\n          </Typography>\n        </Grid>\n        <Grid item>\n          <TextField\n            select\n            label=\"Category\"\n            variant=\"outlined\"\n            className={classes.inputBox}\n            value={signupDetails.type}\n            onChange={(event) => {\n              handleInput(\"type\", event.target.value);\n            }}\n          >\n            <MenuItem value=\"applicant\">Applicant</MenuItem>\n            <MenuItem value=\"recruiter\">Recruiter</MenuItem>\n          </TextField>\n        </Grid>\n        <Grid item>\n          <TextField\n            label=\"Name\"\n            value={signupDetails.name}\n            onChange={(event) => handleInput(\"name\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.name.error}\n            helperText={inputErrorHandler.name.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"name\", true, \"Name is required\");\n              } else {\n                handleInputError(\"name\", false, \"\");\n              }\n            }}\n            variant=\"outlined\"\n          />\n        </Grid>\n        <Grid item>\n          <EmailInput\n            label=\"Email\"\n            value={signupDetails.email}\n            onChange={(event) => handleInput(\"email\", event.target.value)}\n            inputErrorHandler={inputErrorHandler}\n            handleInputError={handleInputError}\n            className={classes.inputBox}\n            required={true}\n          />\n        </Grid>\n        <Grid item>\n          <PasswordInput\n            label=\"Password\"\n            value={signupDetails.password}\n            onChange={(event) => handleInput(\"password\", event.target.value)}\n            className={classes.inputBox}\n            error={inputErrorHandler.password.error}\n            helperText={inputErrorHandler.password.message}\n            onBlur={(event) => {\n              if (event.target.value === \"\") {\n                handleInputError(\"password\", true, \"Password is required\");\n              } else {\n                handleInputError(\"password\", false, \"\");\n              }\n            }}\n          />\n        </Grid>\n        {signupDetails.type === \"applicant\" ? (\n          <>\n            <MultifieldInput\n              education={education}\n              setEducation={setEducation}\n            />\n            <Grid item>\n              <ChipInput\n                className={classes.inputBox}\n                label=\"Skills\"\n                variant=\"outlined\"\n                helperText=\"Press enter to add skills\"\n                onChange={(chips) =>\n                  setSignupDetails({ ...signupDetails, skills: chips })\n                }\n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Resume (Images only)\"\n                icon={<DescriptionIcon />}\n                // value={files.resume}\n                // onChange={(event) =>\n                //   setFiles({\n                //     ...files,\n                //     resume: event.target.files[0],\n                //   })\n                // }\n                uploadTo={apiList.uploadResume}\n                handleInput={handleInput}\n                identifier={\"resume\"}\n              />\n            </Grid>\n            <Grid item>\n              <FileUploadInput\n                className={classes.inputBox}\n                label=\"Profile Photo (.jpg/.png)\"\n                icon={<FaceIcon />}\n                // value={files.profileImage}\n                // onChange={(event) =>\n                //   setFiles({\n                //     ...files,\n                //     profileImage: event.target.files[0],\n                //   })\n                // }\n                uploadTo={apiList.uploadProfileImage}\n                handleInput={handleInput}\n                identifier={\"profile\"}\n              />\n            </Grid>\n          </>\n        ) : (\n          <>\n            <Grid item style={{ width: \"100%\" }}>\n              <TextField\n                label=\"Bio (upto 250 words)\"\n                multiline\n                rows={8}\n                style={{ width: \"100%\" }}\n                variant=\"outlined\"\n                value={signupDetails.bio}\n                onChange={(event) => {\n                  if (\n                    event.target.value.split(\" \").filter(function (n) {\n                      return n != \"\";\n                    }).length <= 250\n                  ) {\n                    handleInput(\"bio\", event.target.value);\n                  }\n                }}\n              />\n            </Grid>\n            <Grid item>\n              <PhoneInput\n                country={\"in\"}\n                value={phone}\n                onChange={(phone) => setPhone(phone)}\n              />\n            </Grid>\n          </>\n        )}\n\n        <Grid item>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => {\n              signupDetails.type === \"applicant\"\n                ? handleLogin()\n                : handleLoginRecruiter();\n            }}\n            className={classes.submitButton}\n            style={{borderRadius:\"8px\",width:\"130px\",height:\"50px\"}}\n          >\n            Signup\n          </Button>\n          \n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Signup;\n\n\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\nimport { userType } from \"../lib/isAuth\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  const { job } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [sop, setSop] = useState(\"\");\n\n  const handleClose = () => {\n    setOpen(false);\n    setSop(\"\");\n  };\n\n  const handleApply = () => {\n    console.log(job._id);\n    console.log(sop);\n    axios\n      .post(\n        `${apiList.jobs}/${job._id}/applications`,\n        {\n          sop: sop,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const deadline = new Date(job.deadline).toLocaleDateString();\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{job.title}</Typography>\n          </Grid>\n          <Grid item>\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\n          </Grid>\n          <Grid item>Role : {job.jobType}</Grid>\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\n          <Grid item>\n            Duration :{\" \"}\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\n          </Grid>\n          <Grid item>Posted By : {job.recruiter.name}</Grid>\n          <Grid item>Application Deadline : {deadline}</Grid>\n\n          <Grid item>\n            {job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item xs={3}>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.button}\n            onClick={() => {\n              setOpen(true);\n            }}\n            disabled={userType() === \"recruiter\"}\n          >\n            Apply\n          </Button>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"50%\",\n            alignItems: \"center\",\n          }}\n        >\n          <TextField\n            label=\"Write SOP (upto 250 words)\"\n            multiline\n            rows={8}\n            style={{ width: \"100%\", marginBottom: \"30px\" }}\n            variant=\"outlined\"\n            value={sop}\n            onChange={(event) => {\n              if (\n                event.target.value.split(\" \").filter(function (n) {\n                  return n != \"\";\n                }).length <= 250\n              ) {\n                setSop(event.target.value);\n              }\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => handleApply()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Job Type\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"fullTime\"\n                      checked={searchOptions.jobType.fullTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Full Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"partTime\"\n                      checked={searchOptions.jobType.partTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Part Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"wfh\"\n                      checked={searchOptions.jobType.wfh}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Work From Home\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Salary\n            </Grid>\n            <Grid item xs={9}>\n              <Slider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => {\n                  return value * (100000 / 100);\n                }}\n                marks={[\n                  { value: 0, label: \"0\" },\n                  { value: 100, label: \"100000\" },\n                ]}\n                value={searchOptions.salary}\n                onChange={(event, value) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    salary: value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Duration\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                select\n                label=\"Duration\"\n                variant=\"outlined\"\n                fullWidth\n                value={searchOptions.duration}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    duration: event.target.value,\n                  })\n                }\n              >\n                <MenuItem value=\"0\">All</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n                <MenuItem value=\"5\">5</MenuItem>\n                <MenuItem value=\"6\">6</MenuItem>\n                <MenuItem value=\"7\">7</MenuItem>\n              </TextField>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"salary\"\n                    checked={searchOptions.sort.salary.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"salary\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"salary\">\n                    <Typography>Salary</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.salary.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            desc: !searchOptions.sort.salary.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.salary.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"duration\"\n                    checked={searchOptions.sort.duration.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"duration\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"duration\">\n                    <Typography>Duration</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.duration.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            desc: !searchOptions.sort.duration.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.duration.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort.rating.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.rating.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            desc: !searchOptions.sort.rating.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.rating.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst Home = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    query: \"\",\n    jobType: {\n      fullTime: false,\n      partTime: false,\n      wfh: false,\n    },\n    salary: [0, 100],\n    duration: \"0\",\n    sort: {\n      salary: {\n        status: false,\n        desc: false,\n      },\n      duration: {\n        status: false,\n        desc: false,\n      },\n      rating: {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    if (searchOptions.query !== \"\") {\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\n    }\n    if (searchOptions.jobType.fullTime) {\n      searchParams = [...searchParams, `jobType=Full%20Time`];\n    }\n    if (searchOptions.jobType.partTime) {\n      searchParams = [...searchParams, `jobType=Part%20Time`];\n    }\n    if (searchOptions.jobType.wfh) {\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\n    }\n    if (searchOptions.salary[0] != 0) {\n      searchParams = [\n        ...searchParams,\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\n      ];\n    }\n    if (searchOptions.salary[1] != 100) {\n      searchParams = [\n        ...searchParams,\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\n      ];\n    }\n    if (searchOptions.duration != \"0\") {\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = apiList.jobs;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setJobs(\n          response.data.filter((obj) => {\n            const today = new Date();\n            const deadline = new Date(obj.deadline);\n            return deadline > today;\n          })\n        );\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n            <Typography variant=\"h2\" style={{color:\"white\",fontWeight:\"bold\"}}>Jobs</Typography>\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label=\"Search Jobs\"\n              value={searchOptions.query}\n              onChange={(event) =>\n                setSearchOptions({\n                  ...searchOptions,\n                  query: event.target.value,\n                })\n                \n              }\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\") {\n                  getData();\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton onClick={() => getData()}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              style={{ width: \"500px\",backgroundColor:\"white\",borderRadius:\"12px\" }}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item>\n            <IconButton onClick={() => setFilterOpen(true)}>\n              <FilterListIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{height:\"50px\", textAlign: \"center\",\n            background:\"rgba(255,255,255,0.5)\",marginLeft:\"25%\",marginRight:\"25%\",paddingTop:\"15px\" }}>\n              No jobs found\n            </Typography>\n          )}\n        </Grid>\n        {/* <Grid item>\n          <Pagination count={10} color=\"primary\" />\n        </Grid> */}\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default Home;\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,Chip,Grid,IconButton,InputAdornment,makeStyles,Paper,\n  TextField,Typography,Modal,Slider,FormControlLabel,FormGroup,MenuItem,Checkbox,\n} from \"@material-ui/core\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList from \"../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [rating, setRating] = useState(application.job.rating);\n\n  const appliedOn = new Date(application.dateOfApplication);\n  const joinedOn = new Date(application.dateOfJoining);\n\n  const fetchRating = () => {\n    axios\n      .get(`${apiList.rating}?id=${application.job._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setRating(response.data.rating);\n        console.log(response.data);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const changeRating = () => {\n    axios\n      .put(\n        apiList.rating,\n        { rating: rating, jobId: application.job._id },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Rating updated successfully\",\n        });\n        fetchRating();\n        setOpen(false);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        fetchRating();\n        setOpen(false);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{application.job.title}</Typography>\n          </Grid>\n          <Grid item>Posted By: {application.recruiter.name}</Grid>\n          <Grid item>Role : {application.job.jobType}</Grid>\n          <Grid item>Salary : &#8377; {application.job.salary} per month</Grid>\n          <Grid item>\n            Duration :{\" \"}\n            {application.job.duration !== 0\n              ? `${application.job.duration} month`\n              : `Flexible`}\n          </Grid>\n          <Grid item>\n            {application.job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          {application.status === \"accepted\" ||\n          application.status === \"finished\" ? (\n            <Grid item>Joined On: {joinedOn.toLocaleDateString()}</Grid>\n          ) : null}\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item xs>\n            <Paper\n              className={classes.statusBlock}\n              style={{\n                background: colorSet[application.status],\n                color: \"#ffffff\",\n              }}\n            >\n              {application.status}\n            </Paper>\n          </Grid>\n          {application.status === \"accepted\" ||\n          application.status === \"finished\" ? (\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.statusBlock}\n                onClick={() => {\n                  fetchRating();\n                  setOpen(true);\n                }}\n              >\n                Rate Job\n              </Button>\n            </Grid>\n          ) : null}\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Rating\n            name=\"simple-controlled\"\n            style={{ marginBottom: \"30px\" }}\n            value={rating === -1 ? null : rating}\n            onChange={(event, newValue) => {\n              setRating(newValue);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst Applications = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.applications, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <Grid\n      container\n      item\n      direction=\"column\"\n      alignItems=\"center\"\n      style={{ padding: \"30px\", minHeight: \"93vh\" }}\n    >\n      <Grid item>\n        <Typography variant=\"h2\" style={{color:\"white\",fontWeight:\"bold\"}}>Applications</Typography>\n      </Grid>\n\n      <Grid\n        container\n        item\n        xs\n        direction=\"column\"\n        style={{ width: \"100%\" }}\n        alignItems=\"stretch\"\n        justify=\"center\"\n      >\n        {applications.length > 0 ? (\n          applications.map((obj) => (\n            <Grid item>\n              <ApplicationTile application={obj} />\n            </Grid>\n          ))\n        ) : (\n          <Typography variant=\"h5\" style={{ height:\"50px\", textAlign: \"center\",\n          background:\"rgba(255,255,255,0.5)\",marginLeft:\"25%\",marginRight:\"25%\",paddingTop:\"15px\"}}>\n            No Applications Found\n          </Typography>\n        )}\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Applications;\n","import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n  Avatar,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\nimport FileUploadInput from \"../lib/FileUploadInput\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport FaceIcon from \"@material-ui/icons/Face\";\n\nimport { SetPopupContext } from \"../App\";\n\nimport apiList, {server} from \"../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n  avatar: {\n    alignSelf:\"center\",\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst MultifieldInput = (props) => {\n  const classes = useStyles();\n  const { education, setEducation } = props;\n\n  return (\n    <>\n      {education.map((obj, key) => (\n        <Grid item container className={classes.inputBox} key={key}>\n          <Grid item xs={6}>\n            <TextField\n              label={`Institution Name #${key + 1}`}\n              value={education[key].institutionName}\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].institutionName = event.target.value;\n                setEducation(newEdu);\n              }}\n              variant=\"outlined\"\n              fullWidth\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"Start Year\"\n              value={obj.startYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].startYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              label=\"End Year\"\n              value={obj.endYear}\n              variant=\"outlined\"\n              type=\"number\"\n              onChange={(event) => {\n                const newEdu = [...education];\n                newEdu[key].endYear = event.target.value;\n                setEducation(newEdu);\n              }}\n            />\n          </Grid>\n        </Grid>\n      ))}\n      <Grid item style={{ alignSelf: \"center\" }}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() =>\n            setEducation([\n              ...education,\n              {\n                institutionName: \"\",\n                startYear: \"\",\n                endYear: \"\",\n              },\n            ])\n          }\n          className={classes.inputBox}\n        >\n          Add another institution details\n        </Button>\n      </Grid>\n    </>\n  );\n};\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n  const [userData, setUserData] = useState();\n  const [open, setOpen] = useState(false);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    education: [],\n    skills: [],\n    resume: \"\",\n    profile: \"\",\n  });\n\n  const [education, setEducation] = useState([\n    {\n      institutionName: \"\",\n      startYear: \"\",\n      endYear: \"\",\n    },\n  ]);\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        if (response.data.education.length > 0) {\n          setEducation(\n            response.data.education.map((edu) => ({\n              institutionName: edu.institutionName ? edu.institutionName : \"\",\n              startYear: edu.startYear ? edu.startYear : \"\",\n              endYear: edu.endYear ? edu.endYear : \"\",\n            }))\n          );\n        }\n      })\n      .catch((err) => {\n        //console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n   \n  const getResume= ()=>{\n    const address = `${profileDetails.resume}`;\n    console.log(address)\n    if(address!==\"\")\n    {\n      window.open(address)\n      // console.log(error);\n        \n    }else{\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"You have not uploaded any resume. Upload one to view!\",\n      });\n    }\n    \n    // axios(address, {\n    //   method: \"GET\",\n    //   responseType: \"blob\",\n    // })\n    //   .then((response) => {\n    //     const file = new Blob([response.data], { type: \"application/pdf\" });\n    //     const fileURL = URL.createObjectURL(file);\n    //     window.open(fileURL);\n    //   })\n    //   .catch((error) => {\n    //     console.log(error);\n    //     setPopup({\n    //       open: true,\n    //       severity: \"error\",\n    //       message: \"You have not uploaded any resume. Upload one to view!\",\n    //     });\n    //   });\n  }\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const editDetails = () => {\n    setOpen(true);\n  };\n\n  const handleUpdate = () => {\n    console.log(education);\n\n    let updatedDetails = {\n      ...profileDetails,\n      education: education\n        .filter((obj) => obj.institutionName.trim() !== \"\")\n        .map((obj) => {\n          if (obj[\"endYear\"] === \"\") {\n            delete obj[\"endYear\"];\n          }\n          return obj;\n        }),\n    };\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n    setOpen(false);\n  };\n  \n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        \n        <Grid item xs>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Grid\n                container direction=\"column\" alignItems=\"center\" \n                xs={2}\n                style={{\n                  display:\"center\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  float:\"left\",\n                }}\n              >\n                <Avatar\n                  src={`${profileDetails.profile}`}\n                  className={classes.avatar}\n                  \n                />\n                <Typography variant=\"h3\" component=\"h2\" style={{color:\"#3f51b5\",fontWeight:\"bold\"}}>\n                Profile\n                </Typography>\n              </Grid>\n            <Grid container direction=\"column\" alignItems=\"\" spacing={3}>\n            \n            {/* <Grid item >\n              \n            </Grid> */}\n            \n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </Grid>\n              <MultifieldInput\n                education={education}\n                setEducation={setEducation}\n              />\n              <Grid item>\n                <ChipInput\n                  className={classes.inputBox}\n                  label=\"Skills\"\n                  variant=\"outlined\"\n                  helperText=\"Press enter to add skills\"\n                  value={profileDetails.skills}\n                  onAdd={(chip) =>\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: [...profileDetails.skills, chip],\n                    })\n                  }\n                  onDelete={(chip, index) => {\n                    let skills = profileDetails.skills;\n                    skills.splice(index, 1);\n                    setProfileDetails({\n                      ...profileDetails,\n                      skills: skills,\n                    });\n                  }}\n                  fullWidth\n                />\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Resume (Images only)\"\n                  icon={<DescriptionIcon />}\n                  uploadTo={apiList.uploadResume}\n                  handleInput={handleInput}\n                  identifier={\"resume\"}\n                />\n              </Grid>\n              <Grid item>\n              <Button\n                variant=\"contained\"\n                className={classes.statusBlock}\n                color=\"primary\"\n                onClick={() => getResume()}\n                style={{alignItems:\"center\"}}\n              >\n                View Uploaded Resume\n              </Button>\n              </Grid>\n              <Grid item>\n                <FileUploadInput\n                  className={classes.inputBox}\n                  label=\"Profile Photo (.jpg/.png)\"\n                  icon={<FaceIcon />}\n                  uploadTo={apiList.uploadProfileImage}\n                  handleInput={handleInput}\n                  identifier={\"profile\"}\n                />\n              </Grid>\n              \n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\",borderRadius:\"8px\",height:\"50px\"}}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n  MenuItem,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport ChipInput from \"material-ui-chip-input\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst CreateJobs = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [jobDetails, setJobDetails] = useState({\n    title: \"\",\n    maxApplicants: 100,\n    maxPositions: 30,\n    deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n      .toISOString()\n      .substr(0, 16),\n    skillsets: [],\n    jobType: \"Full Time\",\n    duration: 0,\n    salary: 0,\n  });\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleUpdate = () => {\n    console.log(jobDetails);\n    axios\n      .post(apiList.jobs, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        setJobDetails({\n          title: \"\",\n          maxApplicants: 100,\n          maxPositions: 30,\n          deadline: new Date(new Date().getTime() + 10 * 24 * 60 * 60 * 1000)\n            .toISOString()\n            .substr(0, 16),\n          skillsets: [],\n          jobType: \"Full Time\",\n          duration: 0,\n          salary: 0,\n        });\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\", width: \"50%\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\" style={{color:\"white\",fontWeight:\"bold\"}}>Add Job</Typography>\n        </Grid>\n        <Grid item container xs direction=\"column\" justify=\"center\">\n          <Grid item>\n            <Paper\n              style={{\n                padding: \"20px\",\n                outline: \"none\",\n                display: \"flex\",\n                flexDirection: \"column\",\n                justifyContent: \"center\",\n                alignItems: \"center\",\n              }}\n            >\n              <Grid\n                container\n                direction=\"column\"\n                alignItems=\"stretch\"\n                spacing={3}\n              >\n                <Grid item>\n                  <TextField\n                    label=\"Title\"\n                    value={jobDetails.title}\n                    onChange={(event) =>\n                      handleInput(\"title\", event.target.value)\n                    }\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <ChipInput\n                    className={classes.inputBox}\n                    label=\"Skills\"\n                    variant=\"outlined\"\n                    helperText=\"Press enter to add skills\"\n                    value={jobDetails.skillsets}\n                    onAdd={(chip) =>\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: [...jobDetails.skillsets, chip],\n                      })\n                    }\n                    onDelete={(chip, index) => {\n                      let skillsets = jobDetails.skillsets;\n                      skillsets.splice(index, 1);\n                      setJobDetails({\n                        ...jobDetails,\n                        skillsets: skillsets,\n                      });\n                    }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Job Type\"\n                    variant=\"outlined\"\n                    value={jobDetails.jobType}\n                    onChange={(event) => {\n                      handleInput(\"jobType\", event.target.value);\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value=\"Full Time\">Full Time</MenuItem>\n                    <MenuItem value=\"Part Time\">Part Time</MenuItem>\n                    <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    select\n                    label=\"Duration\"\n                    variant=\"outlined\"\n                    value={jobDetails.duration}\n                    onChange={(event) => {\n                      handleInput(\"duration\", event.target.value);\n                    }}\n                    fullWidth\n                  >\n                    <MenuItem value={0}>Flexible</MenuItem>\n                    <MenuItem value={1}>1 Month</MenuItem>\n                    <MenuItem value={3}>3 Months</MenuItem>\n                    <MenuItem value={6}>6 Months</MenuItem>\n                    <MenuItem value={12}>1 Year</MenuItem>\n                    <MenuItem value={24}>2 Years</MenuItem>\n                  </TextField>\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Salary\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.salary}\n                    onChange={(event) => {\n                      handleInput(\"salary\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 0 } }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Application Deadline\"\n                    type=\"datetime-local\"\n                    value={jobDetails.deadline}\n                    onChange={(event) => {\n                      handleInput(\"deadline\", event.target.value);\n                    }}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    variant=\"outlined\"\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Maximum Number Of Applicants\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.maxApplicants}\n                    onChange={(event) => {\n                      handleInput(\"maxApplicants\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 1 } }}\n                    fullWidth\n                  />\n                </Grid>\n                <Grid item>\n                  <TextField\n                    label=\"Positions Available\"\n                    type=\"number\"\n                    variant=\"outlined\"\n                    value={jobDetails.maxPositions}\n                    onChange={(event) => {\n                      handleInput(\"maxPositions\", event.target.value);\n                    }}\n                    InputProps={{ inputProps: { min: 1 } }}\n                    fullWidth\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n                onClick={() => handleUpdate()}\n              >\n                Create Job\n              </Button>\n            </Paper>\n          </Grid>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default CreateJobs;\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n} from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport axios from \"axios\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  button: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n}));\n\nconst JobTile = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const { job, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n\n  const [open, setOpen] = useState(false);\n  const [openUpdate, setOpenUpdate] = useState(false);\n  const [jobDetails, setJobDetails] = useState(job);\n\n  console.log(jobDetails);\n\n  const handleInput = (key, value) => {\n    setJobDetails({\n      ...jobDetails,\n      [key]: value,\n    });\n  };\n\n  const handleClick = (location) => {\n    history.push(location);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseUpdate = () => {\n    setOpenUpdate(false);\n  };\n\n  const handleDelete = () => {\n    console.log(job._id);\n    axios\n      .delete(`${apiList.jobs}/${job._id}`, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleClose();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleClose();\n      });\n  };\n\n  const handleJobUpdate = () => {\n    axios\n      .put(`${apiList.jobs}/${job._id}`, jobDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n        handleCloseUpdate();\n      })\n      .catch((err) => {\n        console.log(err.response);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        handleCloseUpdate();\n      });\n  };\n\n  const postedOn = new Date(job.dateOfPosting);\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid container item xs={9} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">{job.title}</Typography>\n          </Grid>\n          <Grid item>\n            <Rating value={job.rating !== -1 ? job.rating : null} readOnly />\n          </Grid>\n          <Grid item>Role : {job.jobType}</Grid>\n          <Grid item>Salary : &#8377; {job.salary} per month</Grid>\n          <Grid item>\n            Duration :{\" \"}\n            {job.duration !== 0 ? `${job.duration} month` : `Flexible`}\n          </Grid>\n          <Grid item>Date Of Posting: {postedOn.toLocaleDateString()}</Grid>\n          <Grid item>Number of Applicants: {job.maxApplicants}</Grid>\n          <Grid item>\n            Remaining Number of Positions:{\" \"}\n            {job.maxPositions - job.acceptedCandidates}\n          </Grid>\n          <Grid item>\n            {job.skillsets.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item xs>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              onClick={() => handleClick(`/job/applications/${job._id}`)}\n            >\n              View Applications\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpenUpdate(true);\n              }}\n              style={{\n                background: \"#FC7A1E\",\n                color: \"#fff\",\n              }}\n            >\n              Update Details\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              Delete Job\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Are you sure?\n          </Typography>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleDelete()}\n              >\n                Delete\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleClose()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n      <Modal\n        open={openUpdate}\n        onClose={handleCloseUpdate}\n        className={classes.popupDialog}\n      >\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Update Details\n          </Typography>\n          <Grid\n            container\n            direction=\"column\"\n            spacing={3}\n            style={{ margin: \"10px\" }}\n          >\n            <Grid item>\n              <TextField\n                label=\"Application Deadline\"\n                type=\"datetime-local\"\n                value={jobDetails.deadline.substr(0, 16)}\n                onChange={(event) => {\n                  handleInput(\"deadline\", event.target.value);\n                }}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                variant=\"outlined\"\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Maximum Number Of Applicants\"\n                type=\"number\"\n                variant=\"outlined\"\n                value={jobDetails.maxApplicants}\n                onChange={(event) => {\n                  handleInput(\"maxApplicants\", event.target.value);\n                }}\n                InputProps={{ inputProps: { min: 1 } }}\n                fullWidth\n              />\n            </Grid>\n            <Grid item>\n              <TextField\n                label=\"Positions Available\"\n                type=\"number\"\n                variant=\"outlined\"\n                value={jobDetails.maxPositions}\n                onChange={(event) => {\n                  handleInput(\"maxPositions\", event.target.value);\n                }}\n                InputProps={{ inputProps: { min: 1 } }}\n                fullWidth\n              />\n            </Grid>\n          </Grid>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleJobUpdate()}\n              >\n                Update\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseUpdate()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Job Type\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"fullTime\"\n                      checked={searchOptions.jobType.fullTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Full Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"partTime\"\n                      checked={searchOptions.jobType.partTime}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Part Time\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"wfh\"\n                      checked={searchOptions.jobType.wfh}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          jobType: {\n                            ...searchOptions.jobType,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Work From Home\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Salary\n            </Grid>\n            <Grid item xs={9}>\n              <Slider\n                valueLabelDisplay=\"auto\"\n                valueLabelFormat={(value) => {\n                  return value * (100000 / 100);\n                }}\n                marks={[\n                  { value: 0, label: \"0\" },\n                  { value: 100, label: \"100000\" },\n                ]}\n                value={searchOptions.salary}\n                onChange={(event, value) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    salary: value,\n                  })\n                }\n              />\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Duration\n            </Grid>\n            <Grid item xs={9}>\n              <TextField\n                select\n                label=\"Duration\"\n                variant=\"outlined\"\n                fullWidth\n                value={searchOptions.duration}\n                onChange={(event) =>\n                  setSearchOptions({\n                    ...searchOptions,\n                    duration: event.target.value,\n                  })\n                }\n              >\n                <MenuItem value=\"0\">All</MenuItem>\n                <MenuItem value=\"1\">1</MenuItem>\n                <MenuItem value=\"2\">2</MenuItem>\n                <MenuItem value=\"3\">3</MenuItem>\n                <MenuItem value=\"4\">4</MenuItem>\n                <MenuItem value=\"5\">5</MenuItem>\n                <MenuItem value=\"6\">6</MenuItem>\n                <MenuItem value=\"7\">7</MenuItem>\n              </TextField>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"salary\"\n                    checked={searchOptions.sort.salary.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"salary\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"salary\">\n                    <Typography>Salary</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.salary.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          salary: {\n                            ...searchOptions.sort.salary,\n                            desc: !searchOptions.sort.salary.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.salary.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"duration\"\n                    checked={searchOptions.sort.duration.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"duration\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"duration\">\n                    <Typography>Duration</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.duration.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          duration: {\n                            ...searchOptions.sort.duration,\n                            desc: !searchOptions.sort.duration.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.duration.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort.rating.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.rating.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          rating: {\n                            ...searchOptions.sort.rating,\n                            desc: !searchOptions.sort.rating.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.rating.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst MyJobs = (props) => {\n  const [jobs, setJobs] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    query: \"\",\n    jobType: {\n      fullTime: false,\n      partTime: false,\n      wfh: false,\n    },\n    salary: [0, 100],\n    duration: \"0\",\n    sort: {\n      salary: {\n        status: false,\n        desc: false,\n      },\n      duration: {\n        status: false,\n        desc: false,\n      },\n      rating: {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  const setPopup = useContext(SetPopupContext);\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [`myjobs=1`];\n    if (searchOptions.query !== \"\") {\n      searchParams = [...searchParams, `q=${searchOptions.query}`];\n    }\n    if (searchOptions.jobType.fullTime) {\n      searchParams = [...searchParams, `jobType=Full%20Time`];\n    }\n    if (searchOptions.jobType.partTime) {\n      searchParams = [...searchParams, `jobType=Part%20Time`];\n    }\n    if (searchOptions.jobType.wfh) {\n      searchParams = [...searchParams, `jobType=Work%20From%20Home`];\n    }\n    if (searchOptions.salary[0] != 0) {\n      searchParams = [\n        ...searchParams,\n        `salaryMin=${searchOptions.salary[0] * 1000}`,\n      ];\n    }\n    if (searchOptions.salary[1] != 100) {\n      searchParams = [\n        ...searchParams,\n        `salaryMax=${searchOptions.salary[1] * 1000}`,\n      ];\n    }\n    if (searchOptions.duration != \"0\") {\n      searchParams = [...searchParams, `duration=${searchOptions.duration}`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = apiList.jobs;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setJobs(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid\n          item\n          container\n          direction=\"column\"\n          justify=\"center\"\n          alignItems=\"center\"\n        >\n          <Grid item xs>\n            <Typography variant=\"h2\" style={{color:\"white\",fontWeight:\"bold\"}}>My Jobs</Typography>\n          </Grid>\n          <Grid item xs>\n            <TextField\n              label=\"Search Jobs\"\n              value={searchOptions.query}\n              onChange={(event) =>\n                setSearchOptions({\n                  ...searchOptions,\n                  query: event.target.value,\n                })\n              }\n              onKeyPress={(ev) => {\n                if (ev.key === \"Enter\") {\n                  getData();\n                }\n              }}\n              InputProps={{\n                endAdornment: (\n                  <InputAdornment>\n                    <IconButton onClick={() => getData()}>\n                      <SearchIcon />\n                    </IconButton>\n                  </InputAdornment>\n                ),\n              }}\n              style={{ width: \"500px\",backgroundColor:\"white\", borderRadius:\"12px\"}}\n              variant=\"outlined\"\n            />\n          </Grid>\n          <Grid item>\n            <IconButton onClick={() => setFilterOpen(true)}>\n              <FilterListIcon />\n            </IconButton>\n          </Grid>\n        </Grid>\n\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {jobs.length > 0 ? (\n            jobs.map((job) => {\n              return <JobTile job={job} getData={getData} />;\n            })\n          ) : (\n            <Typography variant=\"h5\" style={{height:\"50px\", textAlign: \"center\",\n            background:\"rgba(255,255,255,0.5)\",marginLeft:\"25%\",marginRight:\"25%\",paddingTop:\"15px\" }}>\n              No jobs found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default MyJobs;\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n  Avatar,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Application Status\n            </Grid>\n            <Grid\n              container\n              item\n              xs={9}\n              justify=\"space-around\"\n              // alignItems=\"center\"\n            >\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"rejected\"\n                      checked={searchOptions.status.rejected}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Rejected\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"applied\"\n                      checked={searchOptions.status.applied}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Applied\"\n                />\n              </Grid>\n              <Grid item>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      name=\"shortlisted\"\n                      checked={searchOptions.status.shortlisted}\n                      onChange={(event) => {\n                        setSearchOptions({\n                          ...searchOptions,\n                          status: {\n                            ...searchOptions.status,\n                            [event.target.name]: event.target.checked,\n                          },\n                        });\n                      }}\n                    />\n                  }\n                  label=\"Shortlisted\"\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"name\"\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"name\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"name\">\n                    <Typography>Name</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"dateOfApplication\"\n                    checked={searchOptions.sort.dateOfApplication.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfApplication: {\n                            ...searchOptions.sort.dateOfApplication,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"dateOfApplication\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"dateOfApplication\">\n                    <Typography>Date of Application</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.dateOfApplication.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfApplication: {\n                            ...searchOptions.sort.dateOfApplication,\n                            desc: !searchOptions.sort.dateOfApplication.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.dateOfApplication.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={4}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\n                              .desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  const getResume = () => {\n    if (\n      application.jobApplicant.resume &&\n      application.jobApplicant.resume !== \"\"\n    ) {\n      const address = `${application.jobApplicant.resume}`;\n      console.log(address);\n      window.open(address)\n      // axios(address, {\n      //   method: \"GET\",\n      //   responseType: \"blob\",\n      // })\n      //   .then((response) => {\n      //     const file = new Blob([response.data], { type: \"application/pdf\" });\n      //     const fileURL = URL.createObjectURL(file);\n      //     window.open(fileURL);\n      //   })\n      //   .catch((error) => {\n      //     console.log(error);\n      //     setPopup({\n      //       open: true,\n      //       severity: \"error\",\n      //       message: \"Error\",\n      //     });\n      //   });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"No resume found\",\n      });\n    }\n  };\n\n  const updateStatus = (status) => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString(),\n    };\n    axios\n      .put(address, statusData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  const buttonSet = {\n    applied: (\n      <>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"shortlisted\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"shortlisted\")}\n          >\n            Shortlist\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    shortlisted: (\n      <>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"accepted\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"accepted\")}\n          >\n            Accept\n          </Button>\n        </Grid>\n        <Grid item xs>\n          <Button\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n            onClick={() => updateStatus(\"rejected\")}\n          >\n            Reject\n          </Button>\n        </Grid>\n      </>\n    ),\n    rejected: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"rejected\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Rejected\n          </Paper>\n        </Grid>\n      </>\n    ),\n    accepted: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"accepted\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Accepted\n          </Paper>\n        </Grid>\n      </>\n    ),\n    cancelled: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"cancelled\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Cancelled\n          </Paper>\n        </Grid>\n      </>\n    ),\n    finished: (\n      <>\n        <Grid item xs>\n          <Paper\n            className={classes.statusBlock}\n            style={{\n              background: colorSet[\"finished\"],\n              color: \"#ffffff\",\n            }}\n          >\n            Finished\n          </Paper>\n        </Grid>\n      </>\n    ),\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            src={`${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          />\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.jobApplicant.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Rating\n              value={\n                application.jobApplicant.rating !== -1\n                  ? application.jobApplicant.rating\n                  : null\n              }\n              readOnly\n            />\n          </Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          <Grid item>\n            Education:{\" \"}\n            {application.jobApplicant.education\n              .map((edu) => {\n                return `${edu.institutionName} (${edu.startYear}-${\n                  edu.endYear ? edu.endYear : \"Ongoing\"\n                })`;\n              })\n              .join(\", \")}\n          </Grid>\n          <Grid item>\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\n          </Grid>\n          <Grid item>\n            {application.jobApplicant.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              color=\"primary\"\n              onClick={() => getResume()}\n            >\n              Download Resume\n            </Button>\n          </Grid>\n          <Grid item container xs>\n            {buttonSet[application.status]}\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            // onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst JobApplications = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const { jobId } = useParams();\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    status: {\n      all: false,\n      applied: false,\n      shortlisted: false,\n    },\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      dateOfApplication: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n\n    if (searchOptions.status.rejected) {\n      searchParams = [...searchParams, `status=rejected`];\n    }\n    if (searchOptions.status.applied) {\n      searchParams = [...searchParams, `status=applied`];\n    }\n    if (searchOptions.status.shortlisted) {\n      searchParams = [...searchParams, `status=shortlisted`];\n    }\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}?jobId=${jobId}`;\n    if (queryString !== \"\") {\n      address = `${address}&${queryString}`;\n    }\n\n    console.log(address);\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data);\n        setApplications([]);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\" style={{color:\"white\",fontWeight:\"bold\"}}>Applications</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={() => setFilterOpen(true)}>\n            <FilterListIcon />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{height:\"50px\", textAlign: \"center\",\n            background:\"rgba(255,255,255,0.5)\",marginLeft:\"25%\",marginRight:\"25%\",paddingTop:\"15px\" }}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default JobApplications;\n","import { useState, useEffect, useContext } from \"react\";\nimport {\n  Button,\n  Chip,\n  Grid,\n  IconButton,\n  InputAdornment,\n  makeStyles,\n  Paper,\n  TextField,\n  Typography,\n  Modal,\n  Slider,\n  FormControlLabel,\n  FormGroup,\n  MenuItem,\n  Checkbox,\n  Avatar,\n} from \"@material-ui/core\";\nimport { useParams } from \"react-router-dom\";\nimport Rating from \"@material-ui/lab/Rating\";\nimport axios from \"axios\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList, { server } from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  statusBlock: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    textTransform: \"uppercase\",\n  },\n  jobTileOuter: {\n    padding: \"30px\",\n    margin: \"20px 0\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  avatar: {\n    width: theme.spacing(17),\n    height: theme.spacing(17),\n  },\n}));\n\nconst FilterPopup = (props) => {\n  const classes = useStyles();\n  const { open, handleClose, searchOptions, setSearchOptions, getData } = props;\n  return (\n    <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n      <Paper\n        style={{\n          padding: \"50px\",\n          outline: \"none\",\n          minWidth: \"50%\",\n        }}\n      >\n        <Grid container direction=\"column\" alignItems=\"center\" spacing={3}>\n          {}\n          <Grid container item alignItems=\"center\">\n            <Grid item xs={3}>\n              Sort\n            </Grid>\n            <Grid item container direction=\"row\" xs={9}>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"name\"\n                    checked={searchOptions.sort[\"jobApplicant.name\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"name\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"name\">\n                    <Typography>Name</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.name\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.name\": {\n                            ...searchOptions.sort[\"jobApplicant.name\"],\n                            desc: !searchOptions.sort[\"jobApplicant.name\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.name\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"jobTitle\"\n                    checked={searchOptions.sort[\"job.title\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"job.title\": {\n                            ...searchOptions.sort[\"job.title\"],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"jobTitle\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"jobTitle\">\n                    <Typography>Job Title</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"job.title\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"job.title\": {\n                            ...searchOptions.sort[\"job.title\"],\n                            desc: !searchOptions.sort[\"job.title\"].desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"job.title\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"dateOfJoining\"\n                    checked={searchOptions.sort.dateOfJoining.status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfJoining: {\n                            ...searchOptions.sort.dateOfJoining,\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"dateOfJoining\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"dateOfJoining\">\n                    <Typography>Date of Joining</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort.dateOfJoining.status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          dateOfJoining: {\n                            ...searchOptions.sort.dateOfJoining,\n                            desc: !searchOptions.sort.dateOfJoining.desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort.dateOfJoining.desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n              <Grid\n                item\n                container\n                xs={6}\n                justify=\"space-around\"\n                alignItems=\"center\"\n                style={{ border: \"1px solid #D1D1D1\", borderRadius: \"5px\" }}\n              >\n                <Grid item>\n                  <Checkbox\n                    name=\"rating\"\n                    checked={searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onChange={(event) =>\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[[\"jobApplicant.rating\"]],\n                            status: event.target.checked,\n                          },\n                        },\n                      })\n                    }\n                    id=\"rating\"\n                  />\n                </Grid>\n                <Grid item>\n                  <label for=\"rating\">\n                    <Typography>Rating</Typography>\n                  </label>\n                </Grid>\n                <Grid item>\n                  <IconButton\n                    disabled={!searchOptions.sort[\"jobApplicant.rating\"].status}\n                    onClick={() => {\n                      setSearchOptions({\n                        ...searchOptions,\n                        sort: {\n                          ...searchOptions.sort,\n                          \"jobApplicant.rating\": {\n                            ...searchOptions.sort[\"jobApplicant.rating\"],\n                            desc: !searchOptions.sort[\"jobApplicant.rating\"]\n                              .desc,\n                          },\n                        },\n                      });\n                    }}\n                  >\n                    {searchOptions.sort[\"jobApplicant.rating\"].desc ? (\n                      <ArrowDownwardIcon />\n                    ) : (\n                      <ArrowUpwardIcon />\n                    )}\n                  </IconButton>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\" }}\n              onClick={() => getData()}\n            >\n              Apply\n            </Button>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Modal>\n  );\n};\n\nconst ApplicationTile = (props) => {\n  const classes = useStyles();\n  const { application, getData } = props;\n  const setPopup = useContext(SetPopupContext);\n  const [open, setOpen] = useState(false);\n  const [openEndJob, setOpenEndJob] = useState(false);\n  const [rating, setRating] = useState(application.jobApplicant.rating);\n\n  const appliedOn = new Date(application.dateOfApplication);\n\n  const changeRating = () => {\n    axios\n      .put(\n        apiList.rating,\n        { rating: rating, applicantId: application.jobApplicant.userId },\n        {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        console.log(response.data);\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: \"Rating updated successfully\",\n        });\n        // fetchRating();\n        getData();\n        setOpen(false);\n      })\n      .catch((err) => {\n        // console.log(err.response);\n        console.log(err);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        // fetchRating();\n        getData();\n        setOpen(false);\n      });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleCloseEndJob = () => {\n    setOpenEndJob(false);\n  };\n\n  const colorSet = {\n    applied: \"#3454D1\",\n    shortlisted: \"#DC851F\",\n    accepted: \"#09BC8A\",\n    rejected: \"#D1345B\",\n    deleted: \"#B49A67\",\n    cancelled: \"#FF8484\",\n    finished: \"#4EA5D9\",\n  };\n\n  const getResume = () => {\n    if (\n      application.jobApplicant.resume &&\n      application.jobApplicant.resume !== \"\"\n    ) {\n      const address = `${application.jobApplicant.resume}`;\n      console.log(address);\n      window.open(address)\n      // axios(address, {\n      //   method: \"GET\",\n      //   responseType: \"blob\",\n      // })\n      //   .then((response) => {\n      //     const file = new Blob([response.data], { type: \"application/pdf\" });\n      //     const fileURL = URL.createObjectURL(file);\n      //     window.open(fileURL);\n      //   })\n      //   .catch((error) => {\n      //     console.log(error);\n      //     setPopup({\n      //       open: true,\n      //       severity: \"error\",\n      //       message: \"Error\",\n      //     });\n      //   });\n    } else {\n      setPopup({\n        open: true,\n        severity: \"error\",\n        message: \"No resume found\",\n      });\n    }\n  };\n\n  const updateStatus = (status) => {\n    const address = `${apiList.applications}/${application._id}`;\n    const statusData = {\n      status: status,\n      dateOfJoining: new Date().toISOString(),\n    };\n    axios\n      .put(address, statusData, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        handleCloseEndJob();\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n        handleCloseEndJob();\n      });\n  };\n\n  return (\n    <Paper className={classes.jobTileOuter} elevation={3}>\n      <Grid container>\n        <Grid\n          item\n          xs={2}\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <Avatar\n            src={`${application.jobApplicant.profile}`}\n            className={classes.avatar}\n          />\n        </Grid>\n        <Grid container item xs={7} spacing={1} direction=\"column\">\n          <Grid item>\n            <Typography variant=\"h5\">\n              {application.jobApplicant.name}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Rating\n              value={\n                application.jobApplicant.rating !== -1\n                  ? application.jobApplicant.rating\n                  : null\n              }\n              readOnly\n            />\n          </Grid>\n          <Grid item>Job Title: {application.job.title}</Grid>\n          <Grid item>Role: {application.job.jobType}</Grid>\n          <Grid item>Applied On: {appliedOn.toLocaleDateString()}</Grid>\n          <Grid item>\n            SOP: {application.sop !== \"\" ? application.sop : \"Not Submitted\"}\n          </Grid>\n          <Grid item>\n            {application.jobApplicant.skills.map((skill) => (\n              <Chip label={skill} style={{ marginRight: \"2px\" }} />\n            ))}\n          </Grid>\n        </Grid>\n        <Grid item container direction=\"column\" xs={3}>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              className={classes.statusBlock}\n              color=\"primary\"\n              onClick={() => getResume()}\n            >\n              Download Resume\n            </Button>\n          </Grid>\n          <Grid item container xs>\n            {/* {buttonSet[application.status]} */}\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              style={{\n                background: \"#09BC8A\",\n              }}\n              onClick={() => {\n                setOpenEndJob(true);\n              }}\n            >\n              End Job\n            </Button>\n          </Grid>\n          <Grid item>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.statusBlock}\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              Rate Applicant\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Modal open={open} onClose={handleClose} className={classes.popupDialog}>\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Rating\n            name=\"simple-controlled\"\n            style={{ marginBottom: \"30px\" }}\n            value={rating === -1 ? null : rating}\n            onChange={(event, newValue) => {\n              setRating(newValue);\n            }}\n          />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ padding: \"10px 50px\" }}\n            onClick={() => changeRating()}\n          >\n            Submit\n          </Button>\n        </Paper>\n      </Modal>\n      <Modal\n        open={openEndJob}\n        onClose={handleCloseEndJob}\n        className={classes.popupDialog}\n      >\n        <Paper\n          style={{\n            padding: \"20px\",\n            outline: \"none\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n            minWidth: \"30%\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography variant=\"h4\" style={{ marginBottom: \"10px\" }}>\n            Are you sure?\n          </Typography>\n          <Grid container justify=\"center\" spacing={5}>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"secondary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => {\n                  updateStatus(\"finished\");\n                }}\n              >\n                Yes\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                variant=\"contained\"\n                color=\"primary\"\n                style={{ padding: \"10px 50px\" }}\n                onClick={() => handleCloseEndJob()}\n              >\n                Cancel\n              </Button>\n            </Grid>\n          </Grid>\n        </Paper>\n      </Modal>\n    </Paper>\n  );\n};\n\nconst AcceptedApplicants = (props) => {\n  const setPopup = useContext(SetPopupContext);\n  const [applications, setApplications] = useState([]);\n  const [filterOpen, setFilterOpen] = useState(false);\n  const [searchOptions, setSearchOptions] = useState({\n    sort: {\n      \"jobApplicant.name\": {\n        status: false,\n        desc: false,\n      },\n      \"job.title\": {\n        status: false,\n        desc: false,\n      },\n      dateOfJoining: {\n        status: true,\n        desc: true,\n      },\n      \"jobApplicant.rating\": {\n        status: false,\n        desc: false,\n      },\n    },\n  });\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    let searchParams = [];\n    searchParams = [...searchParams, `status=accepted`];\n\n    let asc = [],\n      desc = [];\n\n    Object.keys(searchOptions.sort).forEach((obj) => {\n      const item = searchOptions.sort[obj];\n      if (item.status) {\n        if (item.desc) {\n          desc = [...desc, `desc=${obj}`];\n        } else {\n          asc = [...asc, `asc=${obj}`];\n        }\n      }\n    });\n\n    searchParams = [...searchParams, ...asc, ...desc];\n    const queryString = searchParams.join(\"&\");\n    console.log(queryString);\n    let address = `${apiList.applicants}`;\n    if (queryString !== \"\") {\n      address = `${address}?${queryString}`;\n    }\n\n    console.log(address);\n\n    axios\n      .get(address, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setApplications(response.data);\n      })\n      .catch((err) => {\n        console.log(err.response);\n        // console.log(err.response.data);\n        setApplications([]);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        <Grid item>\n          <Typography variant=\"h2\" style={{color:\"white\",fontWeight:\"bold\"}}>Employees</Typography>\n        </Grid>\n        <Grid item>\n          <IconButton onClick={() => setFilterOpen(true)}>\n            <FilterListIcon />\n          </IconButton>\n        </Grid>\n        <Grid\n          container\n          item\n          xs\n          direction=\"column\"\n          style={{ width: \"100%\" }}\n          alignItems=\"stretch\"\n          justify=\"center\"\n        >\n          {applications.length > 0 ? (\n            applications.map((obj) => (\n              <Grid item>\n                {/* {console.log(obj)} */}\n                <ApplicationTile application={obj} getData={getData} />\n              </Grid>\n            ))\n          ) : (\n            <Typography variant=\"h5\" style={{ height:\"50px\", textAlign: \"center\",\n            background:\"rgba(255,255,255,0.5)\",marginLeft:\"25%\",marginRight:\"25%\",paddingTop:\"15px\"}}>\n              No Applications Found\n            </Typography>\n          )}\n        </Grid>\n      </Grid>\n      <FilterPopup\n        open={filterOpen}\n        searchOptions={searchOptions}\n        setSearchOptions={setSearchOptions}\n        handleClose={() => setFilterOpen(false)}\n        getData={() => {\n          getData();\n          setFilterOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default AcceptedApplicants;\n","import { useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Typography,\n  Modal,\n  Paper,\n  makeStyles,\n  TextField,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport PhoneInput from \"react-phone-input-2\";\nimport \"react-phone-input-2/lib/material.css\";\n\nimport { SetPopupContext } from \"../../App\";\n\nimport apiList from \"../../lib/apiList\";\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    height: \"inherit\",\n  },\n  popupDialog: {\n    height: \"100%\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // padding: \"30px\",\n  },\n}));\n\nconst Profile = (props) => {\n  const classes = useStyles();\n  const setPopup = useContext(SetPopupContext);\n\n  const [profileDetails, setProfileDetails] = useState({\n    name: \"\",\n    bio: \"\",\n    contactNumber: \"\",\n  });\n\n  const [phone, setPhone] = useState(\"\");\n\n  const handleInput = (key, value) => {\n    setProfileDetails({\n      ...profileDetails,\n      [key]: value,\n    });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  const getData = () => {\n    axios\n      .get(apiList.user, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        console.log(response.data);\n        setProfileDetails(response.data);\n        setPhone(response.data.contactNumber);\n      })\n      .catch((err) => {\n        console.log(err.response.data);\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: \"Error\",\n        });\n      });\n  };\n\n  const handleUpdate = () => {\n    let updatedDetails = {\n      ...profileDetails,\n    };\n    if (phone !== \"\") {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: `+${phone}`,\n      };\n    } else {\n      updatedDetails = {\n        ...profileDetails,\n        contactNumber: \"\",\n      };\n    }\n\n    axios\n      .put(apiList.user, updatedDetails, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      })\n      .then((response) => {\n        setPopup({\n          open: true,\n          severity: \"success\",\n          message: response.data.message,\n        });\n        getData();\n      })\n      .catch((err) => {\n        setPopup({\n          open: true,\n          severity: \"error\",\n          message: err.response.data.message,\n        });\n        console.log(err.response);\n      });\n  };\n\n  return (\n    <>\n      <Grid\n        container\n        item\n        direction=\"column\"\n        alignItems=\"center\"\n        style={{ padding: \"30px\", minHeight: \"93vh\" }}\n      >\n        \n        <Grid item xs style={{ width: \"100%\" }}>\n          <Paper\n            style={{\n              padding: \"20px\",\n              outline: \"none\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              //   width: \"60%\",\n            }}\n          >\n            <Grid container direction=\"column\" alignItems=\"stretch\" spacing={3}>\n            <Grid item >\n              <Typography variant=\"h3\" component=\"h2\" style={{color:\"#3f51b5\",fontWeight:\"bold\"}}>\n                Profile\n              </Typography>\n            </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Name\"\n                  value={profileDetails.name}\n                  onChange={(event) => handleInput(\"name\", event.target.value)}\n                  className={classes.inputBox}\n                  variant=\"outlined\"\n                  fullWidth\n                  style={{ width: \"100%\" }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  label=\"Bio (upto 250 words)\"\n                  multiline\n                  rows={8}\n                  style={{ width: \"100%\" }}\n                  variant=\"outlined\"\n                  value={profileDetails.bio}\n                  onChange={(event) => {\n                    if (\n                      event.target.value.split(\" \").filter(function (n) {\n                        return n != \"\";\n                      }).length <= 250\n                    ) {\n                      handleInput(\"bio\", event.target.value);\n                    }\n                  }}\n                />\n              </Grid>\n              <Grid\n                item\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <PhoneInput\n                  country={\"in\"}\n                  value={phone}\n                  onChange={(phone) => setPhone(phone)}\n                  style={{ width: \"auto\" }}\n                />\n              </Grid>\n            </Grid>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              style={{ padding: \"10px 50px\", marginTop: \"30px\" }}\n              onClick={() => handleUpdate()}\n            >\n              Update Details\n            </Button>\n          </Paper>\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Profile;\n","import { Snackbar, Slide } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\n\nconst MessagePopup = (props) => {\n  const handleClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    props.setOpen(false);\n  };\n  return (\n    <Snackbar open={props.open} onClose={handleClose} autoHideDuration={2000}>\n      <Alert onClose={handleClose} severity={props.severity}>\n        {props.message}\n      </Alert>\n    </Snackbar>\n  );\n};\n\nexport default MessagePopup;\n","import { createContext, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Grid, makeStyles } from \"@material-ui/core\";\n\nimport Welcome, { ErrorPage } from \"./component/Welcome\";\nimport Navbar from \"./component/Navbar\";\nimport Login from \"./component/Login\";\nimport Logout from \"./component/Logout\";\nimport Signup from \"./component/Signup\";\nimport Home from \"./component/Home\";\nimport Applications from \"./component/Applications\";\nimport Profile from \"./component/Profile\";\nimport CreateJobs from \"./component/recruiter/CreateJobs\";\nimport MyJobs from \"./component/recruiter/MyJobs\";\nimport JobApplications from \"./component/recruiter/JobApplications\";\nimport AcceptedApplicants from \"./component/recruiter/AcceptedApplicants\";\nimport RecruiterProfile from \"./component/recruiter/Profile\";\nimport MessagePopup from \"./lib/MessagePopup\";\nimport isAuth, { userType } from \"./lib/isAuth\";\n\nconst useStyles = makeStyles(\n  (theme) => ({\n  body: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    minHeight: \"98vh\",\n    paddingTop: \"64px\",\n    boxSizing: \"border-box\",\n    width: \"100%\",\n  },\n}));\n\nexport const SetPopupContext = createContext();\nconst TITLE =\"Job-o-Hunt\"\n\nfunction App() {\n  const classes = useStyles();\n  const [popup, setPopup] = useState({\n    open: false,\n    severity: \"\",\n    message: \"\",\n  });\n\n  return (\n    <BrowserRouter>\n      \n      <SetPopupContext.Provider value={setPopup}>\n      \n        <Grid container direction=\"column\">\n          <Grid item xs>\n            <Navbar />\n          </Grid>\n          <Grid item className={classes.body}>\n            <Switch>\n              <Route exact path=\"/\">\n                <Welcome />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route exact path=\"/signup\">\n                <Signup />\n              </Route>\n              <Route exact path=\"/logout\">\n                <Logout />\n              </Route>\n              <Route exact path=\"/home\">\n                <Home />\n              </Route>\n              <Route exact path=\"/applications\">\n                <Applications />\n              </Route>\n             \n              <Route exact path=\"/profile\">\n                {userType() === \"recruiter\" ? (\n                  <RecruiterProfile />\n                ) : (\n                  <Profile />\n                )}\n              </Route>\n              <Route exact path=\"/addjob\">\n                <CreateJobs />\n              </Route>\n              <Route exact path=\"/myjobs\">\n                <MyJobs />\n              </Route>\n              <Route exact path=\"/job/applications/:jobId\">\n                <JobApplications />\n              </Route>\n              <Route exact path=\"/employees\">\n                <AcceptedApplicants />\n              </Route>\n              <Route>\n                <ErrorPage />\n              </Route>\n            </Switch>\n          </Grid>\n        </Grid>\n        <MessagePopup\n          open={popup.open}\n          setOpen={(status) =>\n            setPopup({\n              ...popup,\n              open: status,\n            })\n          }\n          severity={popup.severity}\n          message={popup.message}\n        />\n      </SetPopupContext.Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}